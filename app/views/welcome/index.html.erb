<div id="container">
  <nav class='navbar navbar-default navbar-fixed-top'>
    <div class='container'>
      <div class="navbar-header">
        <div class="navbar-brand" href="/">
          <!-- <a class="navbar-brand" href="/"> <img alt="Yaps.co"></a> --><span class="navbar-brand"><a href="/"><p id="logo" class="navbar-brand">Yaps.co</p></a></span>
        </div>
      </div>
      <div class="input-group input-group-lg">
        <span class="input-group-addon"><span id='glyph' class="glyphicon glyphicon-hand-right" aria-hidden="true"></span></span>
          
          <input type="text" id="m" class="form-control" autofocus=true autocomplete="yes" placeholder="yap  yap  yap" aria-describedby="sizing-addon1">
      
        <span class="input-group-btn">
          <button id="message_submit" class="btn btn-lg btn-primary" type="button">Yap!</button>
          <!-- <span id='spacer'></span> -->
        </span>
         <span class="input-group-btn">
        <button id="random_chat" class="btn btn-sm btn-danger" type="button">Random Chat</button>
        </span>
      </div>
    </div>
  </nav>
  <div id="roomname"><h3>Lobby</h3></div>
  <div id='main'>
    <div id='direct_messages'>
      <h6 id='new_room'>Rooms</h6>
      <ul id='rooms'></ul>
    </div>
    <div id='message_box'>
      <ul id="messages"></ul>
    </div>
    <div id='in_room'>
      <h6>People</h6>
      <ul id='people'></ul>
    </div>
  </div>
</div>

<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>

<script>

// $(function(){
  
  
  

  function update_rooms_list(rooms){
    var rooms_block = "", room_arr = [];
    $('#rooms').empty();
    for (var i = 0; i < rooms.length; i++){
      var index = room_arr.indexOf(rooms[i]);
      if (index == -1){
        room_arr.push(rooms[i]);  
      }
    }
    for (var i = 0; i < room_arr.length; i++){
      rooms_block = rooms_block + '<li id="' + room_arr[i] + '">' + room_arr[i] + '</li>';
    }
    $('#rooms').html(rooms_block);
  }

  function chat_message_parser(msg){
    var processed_user, processed_msg, processed_stamp, print_message, processed_image, processed_link;

    processed_user = '<p><span class="user">' + msg.name + '</span>';
    processed_msg = '<span class="message">' + msg.text + '</span>';
    processed_stamp = '<span class="time"><em>@' + msg.stamp + '</em></span></p>';
    
    if (msg.url != "none"){
      processed_link = '<span class="message"><a href="' + msg.url + '" target="_blank">link</a></span>';
    } else{
      processed_link = "";
    };
    print_message = processed_user + ": " + processed_msg + " " + processed_link + " " + processed_stamp;
      
    if (msg.image != "none"){
      print_message = print_message + "<img class='img' src='" + msg.image +"' max-width='100%'>";
    };
    return print_message;
  }

  function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "Anonymous" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }

  function get_image(message){
    var img = message.match(/^https?:\/\/(www)?(.+)\/(.+)\.(png|jpg|gif)\??(.*)$/);
    if (img){
      img = img[0];
      if (img[0] != "h"){
        img = "http://" + img;
      };
    };
    return img === null ? "none" : img;
  }

  function get_url(message){
    var url = message.match(/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[\-;:&=\+\$,\w]+@)?[A-Za-z0-9\.\-]+|(?:www\.|[\-;:&=\+\$,\w]+@)[A-Za-z0-9\.\-]+)((?:\/[\+~%\/\.\w\-_]*)?\??(?:[\-\+=&;%@\.\w_]*)#?(?:[\.\!\/\\\w]*))?)/);
    if ( url ) {
      url = url[0];
      if (url[0] != "h"){
        url = "http://" + url;
      };
    }
    return url === null ? "none" : url;
  }

  function message_handler(message){
      if (message.length > 0){
        var url = get_url(message);
        var image = get_image(message);

        var helper = message.match('/help');
        if (helper){
          $('#messages').prepend($('<li>').html('Type "/listrooms" to list your subreddits<br>Type "/joinroom roomname" to join a room.<br>You can add links, gifs, or images to chat messages.<br>Typing "/help" brings up this list.'));
        }

        var list_rooms = message.match('/listrooms');
        if (list_rooms){
          if (currentUser){
            $.each(user_rooms, function(i, room){
            $('#messages').prepend($('<span>').html(" | " + room + " | ")); 
            });
            $('#messages').prepend("<li>");
            $('#messages').prepend($('<li>').html('Here are your room options. use "/joinroom roomname" to join. '));
          }else {
          $('#messages').prepend($('<li>').html("You're not signed in to Reddit. Sign in to Reddit to see Reddit Subreddit Rooms."));
          };
        };

        var match = message.match("/joinroom");
        if (match){
          var roomname = message.replace("/joinroom ", "");
          change_room = {
            last_room: window.socket_room,
            room: roomname,
            name: username
          }
          new_user = true;
          socket.emit('change room', change_room);
        } else {
          var date = new Date();
          var time = date.toLocaleTimeString();
          
          var hash = {
            date: date,
            name: username,
            text: message,
            stamp: time,
            url: url,
            image: image
          };
        
          if (window.socket_room !== "lobby") {
            hash.socket_room = window.socket_room;
            socket.emit('chat message in room', hash);
          } else {
            hash.socket_room = window.socket_room;
            socket.emit('chat message', hash);
          }
        }
        $('#m').val("");
        return false; 
      }
}

if (currentUser){
  $.get("/return_reddit", function (data) {    
    window.profile = data;
    user_rooms = window.profile.subreddits.map(function(el){
      return el.display_name;
    });
  });
};

var username, change_room, user_rooms = [], room_people, new_user = true;

if (currentUser != undefined){
  username = currentUser.name;
} else{
  username = getParameterByName('name');
  if (username.length >20){
    username.split("");
    username.splice(0,20);
    username.join();
  };
};

var data = {username: username};

  window.socket_room = "lobby";
  user_rooms.push(window.socket_room);
  window.userName = $("span.current_user").text() || "Anonymous";

  var socket = io("<%= Rails.configuration.socket_url %>");
  

  $('#random_chat').on('click', function(){
    socket.emit('random chat', data);
    $('#messages').empty();
    $('#roomname h6').html("Random Room!");
  });

  socket.on('random chat', function(message){
  });

  socket.on('direct message', function(message){
    console.log(message.room);
    console.log(message.message);
    user_rooms.push(message.room);
    debugger;
    update_rooms_list(message.room);
  });

  socket.on('all users', function(room_data){
    room_people = room_data.people[window.socket_room];

    if (new_user === true){
      if (room_data.messages){
        var messages = room_data.messages;
        for (var i = 0; i < messages.length; i++){
          var single_msg = chat_message_parser(messages[i]);
          $('#messages').append($('<li>').html(single_msg));
        }
        new_user = false;  
      }
    }
    
    update_rooms_list(user_rooms);
    
    $('#people').empty();
    for (var i = 0; i < room_people.length; i++) {
      var name = room_people[i];
      $('#people').append('<li id="' + name + '" class="active">' + name + '</li>');
    };
  });


  socket.emit('user config', data);

  $('#in_room').on('dblclick', 'li', function(){
    var thisguy = $(this).attr('id');
    if (thisguy !== username){
      var this_room = [thisguy, username];
      this_room.sort().splice(1,0,"to");
      var direct_room = this_room.join(" ");
    change_room = {
      last_room: window.socket_room,
      room: direct_room,
      name1: username,
      name2: thisguy
    }
    new_user = true;
    socket.emit('direct chat', change_room);
    }
  });

  $('#rooms').on('click', 'li', function(){
    var thisone = $(this).attr('id');
    console.log(thisone);
    if (thisone != window.socket_room){
      change_room = {
            last_room: window.socket_room,
            room: thisone,
            name: username
      }
    new_user = true;
    socket.emit('change room', change_room);
    }
  });

  $('#top').on('click', function(){
    window.location = "/";
  });  

  socket.on('room details', function(room){
    $('#messages').empty();
    window.socket_room = room;
    user_rooms.push(room);
    $('#roomname h3').text(room);
    
  });

$('#new_room').on('dblclick', function(){
  var room = prompt("What room would you like to go to? ");
  if (room !== null){
    change_room = {
            last_room: window.socket_room,
            room: room,
            name: username
          }
          new_user = true;
          socket.emit('change room', change_room);
  }
});

$('#message_submit').on('click', function(){
  var message = $('#m').val();
    message_handler(message);
});

$('#m').keypress(function(){
  if (event.keyCode == 13) {
    var message = $('#m').val();
    message_handler(message);
  }; 
});

  
  socket.on('chat message room change', function (msg) {
    // var thisguy = "#" + msg.name;
    // $(thisguy).toggleClass('away');
    $('#messages').prepend($('<li>').html(
      '<span class="message">YapsBot: ' + msg.name + " " + msg.text + " " + '</span><span class="time">' + msg.stamp + '</span>'
    ));
  });

  socket.on('chat message', function(msg){
    if ( msg.socket_room === window.socket_room ) {
      var print_message = chat_message_parser(msg);
      $('#messages').prepend($('<li>').html(print_message));
    }
  });

  socket.on('user config', function (data) {
    var currentHtml = $("div.people").html();


    if ( $("#" + data.name).length == 0 ) {
      $("div.people").html(currentHtml += "<p id='" + data.name + "'>" + data.name + "</p>");
    }


  });
  //passes deets of leaving person
  socket.on("user disconnected", function (data) {
    $('#messages').prepend($('<li>').html(
      '<span class="message">YapsBot: ' + data.name + " " + data.text + " " + '</span><span class="time">' + data.stamp + '</span>'
    ));
  });
// })
</script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-58677314-1', 'auto');
  ga('send', 'pageview');

</script>


