<div id="top"><h1>Yaps.co</h1></div>
<div class="people"></div>
<div id="container">
  <form action="">
    <input id="m" autofocus=true autocomplete="off" /><button>Send</button>
  </form>
  <div id="roomname"><h6>Lobby</h6></div>
  <ul id="messages"></ul>
</div>
<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>

<script>
// $(function(){
  var username, change_room;
  var socket = io("<%= Rails.configuration.socket_url %>");

  socket.on('all users', function(array){
    console.log(array);
  });



  if (currentUser != undefined){
    username = currentUser.name;
  } else{
   username = getParameterByName('name');
  };
  var data = {username: username};
  socket.emit('user config', data);

  $('#top').on('click', function(){
    window.location = "/";
  });

  function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "Anonymous" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }

  function get_image(message){
    var img = message.match(/^https?:\/\/(www)?(.+)\/(.+)\.(png|jpg|gif)\??(.*)$/);
    if (img){
      img = img[0];
      if (img[0] != "h"){
        img = "http://" + img;
      };
    };
    return img === null ? "none" : img;
  }

  
  function get_url(message){
    var url = message.match(/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[\-;:&=\+\$,\w]+@)?[A-Za-z0-9\.\-]+|(?:www\.|[\-;:&=\+\$,\w]+@)[A-Za-z0-9\.\-]+)((?:\/[\+~%\/\.\w\-_]*)?\??(?:[\-\+=&;%@\.\w_]*)#?(?:[\.\!\/\\\w]*))?)/);
    if ( url ) {
      url = url[0];
      if (url[0] != "h"){
        url = "http://" + url;
      };
    }
    return url === null ? "none" : url;
  }

  socket.on('room details', function(msg){
    $('#roomname h6').text(msg.room);
  });

  $('form').submit(function(){
    var message = $('#m').val();

    var url = get_url(message);
    var image = get_image(message);

    // debugger;
    // var joinroom = joinroom(message);
    var match = message.match("/joinroom");
    if (match){
      var roomname = message.replace("/joinroom ", "");
      change_room = {
        room: roomname,
        name: username
      }
      socket.emit('change room', change_room);
    } else {
      var date = new Date();
      var time = date.toLocaleTimeString();
      
      var hash = {
        date: date,
        name: username,
        text: message,
        stamp: time,
        url: url,
        image: image
      };
      if (window.socket_room) {
        hash.socket_room = window.socket_room;
        socket.emit('chat message in room', hash);
      } else {
        socket.emit('chat message', hash);
      }
    }
    $('#m').val("");
    return false;  
  });

  
  socket.on('chat message room change', function (data) {
    console.log(data)
    window.socket_room = data.socket_room;
  });

  socket.on('chat message', function(msg){
    var processed_user, processed_msg, processed_stamp, print_message, processed_image, processed_link;

    processed_user = '<p><span class="user">' + msg.name + '</span>';
    processed_msg = '<span class="message">' + msg.text + '</span>';
    processed_stamp = '<span class="time"><em>@' + msg.stamp + '</em></span></p>';
    
    if (msg.url != "none"){
      processed_link = '<span class="message"><a href="' + msg.url + '" target="_blank">link</a></span>';
    } else{
      processed_link = "";
    };
    print_message = processed_user + ": " + processed_msg + " " + processed_link + " " + processed_stamp;
    
    if (msg.image != "none"){
      print_message = print_message + "<img class='img' src='" + msg.image +"' max-width='100%'>";
    };
    $('#messages').prepend($('<li>').html(print_message));
  });

  socket.on('user config', function (data) {
    // debugger;
    console.log("USER CONFIGURATION CALLED");
    var currentHtml = $("div.people").html();


    if ( $("#" + data.name).length == 0 ) {
      $("div.people").html(currentHtml += "<p id='" + data.name + "'>" + data.name + "</p>");
    }


  });
  //passes deets of leaving person
  socket.on("user disconnected", function (data) {
    console.log(data);

  });
// })
</script>


